basePath: /api
definitions:
  models.CommunicationScore:
    properties:
      clarity:
        type: integer
      createdAt:
        type: integer
      empathy:
        type: integer
      listening:
        type: integer
      openMindedness:
        type: integer
      partnerId:
        description: Who submitted this
        type: string
      respect:
        type: integer
      responsiveness:
        type: integer
      sessionId:
        description: Which session this score is for
        type: string
    type: object
  models.Message:
    properties:
      speakerId:
        description: Who spoke
        type: string
      text:
        description: Transcript
        type: string
      timestamp:
        description: Unix time
        type: integer
    type: object
  models.PostResolution:
    properties:
      bondingActivity:
        description: e.g., "Go for a walk together"
        type: string
      gratitude:
        description: e.g., "I'm grateful for your honesty"
        type: string
      reflection:
        description: e.g., "I felt better after the session"
        type: string
      sessionId:
        description: Associated session ID
        type: string
      timestamp:
        description: Unix time of submission
        type: integer
      userId:
        description: ID of the user submitting
        type: string
    type: object
  models.Reflection:
    properties:
      id:
        description: 'Composite ID: sessionID-userID'
        type: string
      sessionId:
        description: Which session
        type: string
      text:
        description: Reflection content
        type: string
      timestamp:
        description: Unix time
        type: integer
      userId:
        description: Who submitted
        type: string
    type: object
  models.Session:
    properties:
      createdAt:
        description: Session time
        type: integer
      id:
        description: UUID
        type: string
      messages:
        description: Chat transcript
        items:
          $ref: '#/definitions/models.Message'
        type: array
      partnerA:
        description: User A
        type: string
      partnerB:
        description: User B
        type: string
      resolved:
        description: Has reflection happened
        type: boolean
      scoreA:
        $ref: '#/definitions/models.CommunicationScore'
        description: A's score
      scoreB:
        $ref: '#/definitions/models.CommunicationScore'
        description: B's score
    type: object
  models.User:
    properties:
      challenges:
        items:
          type: string
        type: array
      colorCode:
        type: string
      email:
        type: string
      gender:
        type: string
      goals:
        items:
          type: string
        type: array
      id:
        type: string
      invitedBy:
        description: âœ… NEW
        type: string
      name:
        type: string
      partnerId:
        type: string
    type: object
host: mend-backend-j0qd.onrender.com
info:
  contact: {}
  description: AI-powered couples therapy backend API
  title: Mend API
  version: "1.0"
paths:
  /api/insights/{userId}:
    get:
      description: Returns sessions and reflections submitted by or about the user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get communication insights for a user
      tags:
      - Insights
  /api/invite:
    post:
      consumes:
      - application/json
      description: Links two users as partners by ID and stores inviter.
      parameters:
      - description: Invite Info (yourId and partnerId)
        in: body
        name: invite
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Link partners
      tags:
      - Users
  /api/login:
    post:
      consumes:
      - application/json
      description: Logs in user by email lookup.
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - Users
  /api/moderate:
    post:
      consumes:
      - application/json
      description: Returns AI feedback + tone warning
      parameters:
      - description: Transcript, Speaker
        in: body
        name: input
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: GPT-4 AI moderation of transcript
      tags:
      - Chat
  /api/post-resolution:
    post:
      consumes:
      - application/json
      description: Stores emotional bonding data after a session
      parameters:
      - description: Post-resolution data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.PostResolution'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Save post-resolution reflection
      tags:
      - Reflection
  /api/reflection:
    post:
      consumes:
      - application/json
      description: Stores a post-session reflection entry from a user
      parameters:
      - description: Reflection Data
        in: body
        name: reflection
        required: true
        schema:
          $ref: '#/definitions/models.Reflection'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Reflection'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit a session reflection
      tags:
      - Reflections
  /api/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account in the system.
      parameters:
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Users
  /api/score:
    post:
      consumes:
      - application/json
      description: Partner submits feedback for a session (used for insights)
      parameters:
      - description: Score Data
        in: body
        name: score
        required: true
        schema:
          $ref: '#/definitions/models.CommunicationScore'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit communication score
      tags:
      - Communication
  /api/session:
    post:
      consumes:
      - application/json
      description: Creates a session document in MongoDB
      parameters:
      - description: Session Info
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/models.Session'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Session'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Start a new session between partners
      tags:
      - Session
  /api/user/{id}:
    get:
      description: Returns user information by user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - Users
swagger: "2.0"
