basePath: /api
definitions:
  models.CommunicationScore:
    properties:
      clarity:
        type: integer
      conflictResolution:
        type: integer
      createdAt:
        type: integer
      empathy:
        type: integer
      listening:
        type: integer
      partnerId:
        type: string
      respect:
        type: integer
      sessionId:
        type: string
      summary:
        type: string
    type: object
  models.Message:
    properties:
      sessionId:
        type: string
      speakerId:
        type: string
      text:
        type: string
      timestamp:
        type: integer
    type: object
  models.PostResolution:
    properties:
      attachmentScore:
        description: Optional 1-5
        type: integer
      gratitude:
        description: Freeform reflection
        type: string
      id:
        type: string
      sessionId:
        type: string
      sharedFeelings:
        description: Optional
        type: string
      timestamp:
        type: integer
      userId:
        type: string
    type: object
  models.Session:
    properties:
      createdAt:
        description: Session time
        type: integer
      id:
        description: UUID
        type: string
      messages:
        description: Chat transcript
        items:
          $ref: '#/definitions/models.Message'
        type: array
      partnerA:
        description: User A
        type: string
      partnerB:
        description: User B
        type: string
      resolved:
        description: Has reflection happened
        type: boolean
      scoreA:
        $ref: '#/definitions/models.CommunicationScore'
        description: A's score
      scoreB:
        $ref: '#/definitions/models.CommunicationScore'
        description: B's score
    type: object
  models.User:
    properties:
      challenges:
        items:
          type: string
        type: array
      colorCode:
        type: string
      createdAt:
        type: string
      email:
        type: string
      gender:
        type: string
      goals:
        items:
          type: string
        type: array
      id:
        type: string
      invitedBy:
        type: string
      name:
        type: string
      otherChallenge:
        type: string
      otherGoal:
        type: string
      partnerId:
        type: string
      password:
        type: string
    type: object
host: mend-backend-j0qd.onrender.com
info:
  contact: {}
  description: AI-powered couples therapy backend API
  title: Mend API
  version: "1.0"
paths:
  /api/accept-invite:
    post:
      consumes:
      - application/json
      description: Accepts a partner invite (both users must already exist)
      parameters:
      - description: 'Accept info: yourId, partnerId'
        in: body
        name: accept
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Accept an invitation
      tags:
      - Users
  /api/insights/{userId}:
    get:
      description: Returns sessions, reflections, scores, and emotional bonding data
        for a user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get communication insights for a user
      tags:
      - Insights
  /api/login:
    post:
      consumes:
      - application/json
      description: Logs in user by email and password
      parameters:
      - description: Login credentials (email & password)
        in: body
        name: credentials
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - Users
  /api/onboarding:
    post:
      consumes:
      - application/json
      description: Adds goals and challenges to a user
      parameters:
      - description: User Onboarding Data
        in: body
        name: onboarding
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit onboarding data
      tags:
      - Users
  /api/post-resolution:
    post:
      consumes:
      - application/json
      description: Stores emotional bonding and gratitude reflection after a session
      parameters:
      - description: Post-resolution data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.PostResolution'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PostResolution'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Save post-resolution reflection
      tags:
      - Reflection
  /api/register:
    post:
      consumes:
      - application/json
      description: Creates a user with basic details
      parameters:
      - description: Name, Email, Password, Gender
        in: body
        name: user
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Users
  /api/session:
    post:
      consumes:
      - application/json
      description: Creates a session document in MongoDB and notifies partner via
        email
      parameters:
      - description: Session Info
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/models.Session'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Session'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Start a new session between partners
      tags:
      - Session
  /api/session/active/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Session'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get active (unresolved) session for a user
      tags:
      - Session
  /api/session/end/{sessionId}:
    patch:
      consumes:
      - application/json
      description: Updates the session's resolved field to true, sends partner email,
        and generates AI scores
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mark a session as resolved
      tags:
      - Session
  /api/user/{id}:
    get:
      description: Fetches user info by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - Users
swagger: "2.0"
